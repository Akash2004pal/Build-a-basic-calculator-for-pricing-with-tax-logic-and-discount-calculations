import random

# Example templates for product descriptions
templates = [
    "Introducing the {name}, a premium {category} designed to {benefit}. With features like {features}, it’s the perfect choice for {audience}.",
    "Upgrade your lifestyle with the {name}! This {category} comes with {features}, helping you {benefit}. Ideal for {audience}.",
    "The {name} redefines what a {category} should be. Packed with {features}, it ensures you can {benefit}. A must-have for {audience}.",
    "Discover the {name} – a {category} built to {benefit}. Featuring {features}, it’s tailored for {audience}."
]

# Function to generate description
def generate_description(product):
    template = random.choice(templates)
    return template.format(
        name=product.get("name", "Product"),
        category=product.get("category", "item"),
        features=product.get("features", "great features"),
        benefit=product.get("benefit", "make life easier"),
        audience=product.get("audience", "everyone")
    )

# Pricing Calculator with Tax and Discount
def calculate_price(base_price, tax_rate=0.0, discount=0.0):
    """
    Calculate final price after applying discount and tax.

    base_price: Original price of the product
    tax_rate: Tax percentage (e.g., 18 for 18%)
    discount: Discount percentage (e.g., 10 for 10%)
    """
    # Apply discount
    discounted_price = base_price - (base_price * (discount / 100))
    # Apply tax
    final_price = discounted_price + (discounted_price * (tax_rate / 100))
    return round(final_price, 2)

# Example product data
products = [
    {
        "name": "EcoSmart Bottle",
        "category": "water bottle",
        "features": "double-wall insulation, leak-proof design",
        "benefit": "keep your drinks hot or cold for hours",
        "audience": "fitness enthusiasts and travelers",
        "price": 1200,
        "tax_rate": 18,
        "discount": 10
    },
    {
        "name": "UltraSound Pro",
        "category": "wireless speaker",
        "features": "crystal-clear audio, long battery life",
        "benefit": "enjoy music anywhere without interruptions",
        "audience": "music lovers",
        "price": 3500,
        "tax_rate": 18,
        "discount": 5
    }
]

# Generate descriptions with pricing
for product in products:
    print("-" * 60)
    print(generate_description(product))
    final_price = calculate_price(product["price"], product["tax_rate"], product["discount"])
    print(f"Final Price (with tax & discount): ₹{final_price}")
